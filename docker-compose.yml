# Ports are host:container
services:
  reverse-proxy:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - frontend
      # - api
    ports:
      - "3000:3000"
  api:
    build:
      context: ./api
      target: dev
    volumes:
      - ./api:/app
      - /app/node_modules
      - /app/.next
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NEXT_WEBPACK_USEPOLLING=1
      - WATCHPACK_POLLING=true
    env_file:
      - ./envFiles/.docker.env
    command: sh -c "npm i && npm run ${API_RUN_SCRIPT}"

  frontend:
    build: 
      context: ./frontend
      target: dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./envFiles/.docker.env
      - ./envFiles/.frontend.env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NEXT_WEBPACK_USEPOLLING=1
      - WATCHPACK_POLLING=true

    command: sh -c "npm i && npm run ${FRONTEND_RUN_SCRIPT}"
    depends_on:
      - api
  # auth:
  #   build:
  #     context: ./auth
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5002:5000"

  database:
    image: postgres
    restart: always
    shm_size: 128mb
    env_file:
      - ./envFiles/.db.env

volumes:
  frontend_node_modules: